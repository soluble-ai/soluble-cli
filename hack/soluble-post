#!/bin/bash

# Prototype for POST-ing arbitrary data Soluble SaaS for processing
# Intended to be used to send assessment reports.

set -e

MODULE=test
FILES=()
PARAMS=()
ENV_LIST=()

exit_error() {

cat <<EOF 1>&2
ERROR: $1

EOF

exit 1

}


# parses ~/.soluble_cli config
parse_config() {

if [[ ! -x $(which jq) ]]; then
exit_error "jq not found"
fi

CLI_CONFIG=${HOME}/.soluble_cli
if [[ -f "$CLI_CONFIG" ]]; then

SOLUBLE_CURRENT_PROFILE=$(jq -r .CurrentProfile <$CLI_CONFIG)
SOLUBLE_API_URL=$(jq -r .Profiles.${SOLUBLE_CURRENT_PROFILE}.APIServer <$CLI_CONFIG)
SOLUBLE_API_TOKEN=$(jq -r .Profiles.${SOLUBLE_CURRENT_PROFILE}.APIToken <$CLI_CONFIG)
SOLUBLE_ORG_ID=$(jq -r .Profiles.${SOLUBLE_CURRENT_PROFILE}.Organization <$CLI_CONFIG)

else 

exit_error "$CLI_CONFIG not found"

fi

}
## end of parse_config()



while getopts ":m:e:p:f:" opt
   do
     case $opt in
        m ) MODULE=$OPTARG;;
        e ) ENV_LIST+=($OPTARG);;
        p ) PARAMS+=($OPTARG);;
        f ) FILES+=($OPTARG);;
     esac
done


CURL_ARGS=""
FILE_COUNT=0

for FILE in ${FILES[@]}; do
if [[ ! -f "$FILE" ]]; then
    exit_error "file not found: $FILE"
    exit 1
fi
FILE_COUNT=$(expr $FILE_COUNT + 1)
NEW_ARG="-F file_${FILE_COUNT}=@$FILE"
CURL_ARGS=" $CURL_ARGS $NEW_ARG"
done


for PARAM in ${PARAMS[@]}; do

NEW_ARG="-F $PARAM"
CURL_ARGS=" $CURL_ARGS $NEW_ARG"

done


for ENV_NAME in ${ENV_LIST[@]}; do
    TEMP_VAR=\$$ENV_NAME
    TEMP_VAL=$(eval echo -n $TEMP_VAR)
    NEW_ARG="-F $ENV_NAME=\"$TEMP_VAL\""
    CURL_ARGS="$CURL_ARGS $NEW_ARG"
done




parse_config

cat <<EOF
SOLUBLE_CURRENT_PROFILE : ${SOLUBLE_CURRENT_PROFILE}
SOLUBLE_API_URL         : ${SOLUBLE_API_URL}
SOLUBLE_ORG_ID          : ${SOLUBLE_ORG_ID}
MODULE                  : ${MODULE}

EOF


TEMP_OUTPUT=$(mktemp)

## SAFE_COMMAND allows us to echo the command we will run, wtihout the 
## note HTTP/1.1 is required.  There are some strange things happening with HTTP/2
SAFE_COMMAND="curl -s -X POST --http1.1 -H 'Authorization: Bearer SOLUBLE_API_TOKEN' -H 'X-SOLUBLE-ORG-ID: ${SOLUBLE_ORG_ID}' -m 60 $CURL_ARGS $SOLUBLE_API_URL/api/v1/xcp/${MODULE}/data -o ${TEMP_OUTPUT}"

echo $SAFE_COMMAND
echo

COMMAND=$(echo $SAFE_COMMAND | sed "s/SOLUBLE_API_TOKEN/$SOLUBLE_API_TOKEN/")

sh -c "$COMMAND"  

cat $TEMP_OUTPUT | jq

rm -f $TEMP_OUTPUT