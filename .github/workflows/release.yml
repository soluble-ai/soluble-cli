# Copyright 2020 Soluble Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Draft Release

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'branch or commit  to create tag from'
        default: 'master'
      tagName:
        description: 'tag name'
        required: true

permissions:
  contents: write

jobs:
  draft-release:
    runs-on: ubuntu-latest
    steps:
      - name: Validate tag
        run: |
          if ! [[ ${{ inputs.tagName }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "${{ inputs.tagName }} tag does not match release pattern ^v[0-9]+\.[0-9]+\.[0-9]+$"
            exit 1
          fi
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commit }}
          fetch-depth: 0
      - name: Setting up go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: set version
        id: previous-tag
        run: |
          echo "previous-tag=$(git describe --tags --abbrev=0 --always)" >> $GITHUB_OUTPUT
      - name: build
        run: |
          git log ${{ steps.previous-tag.outputs.previous-tag }}.. --oneline --no-merges > changelog.txt
          make integration-test-configure
          make dist-all VERSION=${{ inputs.tagName }}
        shell: bash
        env:
          SOLUBLE_API_TOKEN: ${{ secrets.SOLUBLE_API_TOKEN }}
          SOLUBLE_API_SERVER: ${{ vars.SOLUBLE_API_SERVER }}
          SOLUBLE_ORGANIZATION: ${{ vars.SOLUBLE_ORGANIZATION }}
      - name: Create Draft Release
        run: |
          gh release create ${{ inputs.tagName }} --draft --notes-file changelog.txt --title ${{ inputs.tagName }} --target ${{ inputs.commit }}
          gh release upload ${{ inputs.tagName }} ./dist/soluble_${{ inputs.tagName }}_linux_amd64.tar.gz
          gh release upload ${{ inputs.tagName }} ./dist/soluble_${{ inputs.tagName }}_linux_arm64.tar.gz
          gh release upload ${{ inputs.tagName }} ./dist/soluble_${{ inputs.tagName }}_darwin_amd64.tar.gz
          gh release upload ${{ inputs.tagName }} ./dist/soluble_${{ inputs.tagName }}_darwin_arm64.tar.gz
          gh release upload ${{ inputs.tagName }} ./dist/soluble_${{ inputs.tagName }}_windows_amd64.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Report Status
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.IAC_SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_COLOR: ${{ job.status }}